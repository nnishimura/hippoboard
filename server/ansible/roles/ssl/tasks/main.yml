---
- name: Install prerequisites with yum
  yum: name={{ item }} update_cache=yes state=latest
  loop:

    - openssl
    - python-pip

- name: Install prerequisites with pip
  pip:
    name: "{{ item }}"
  loop:
    - boto
    - pyOpenSSL

- name: Create the certs directory
  file:
    path: "{{ cert_dir }}"
    state: directory
    mode: 0755

- name: Create the letsencrypt account key directory
  file:
    path: "{{ account_key_dir }}"
    state: directory
    mode: 0700

- name: Generate the private key
  openssl_privatekey:
    path: "{{ cert_dir }}/{{ http_host }}.key"
    size: 2048
    owner: "{{ remote_web_user }}"
    group: "{{ remote_web_user }}"
    mode: 0600

- name: Generate the CSR
  openssl_csr:
    path: "{{ cert_dir }}/{{ http_host }}.csr"
    privatekey_path: "{{ cert_dir }}/{{ http_host }}.key"
    common_name: "{{ http_host }}"
    key_usage:
      - digitalSignature
      - keyEncipherment
    subject_alt_name: "DNS:{{ http_host }}"
    extended_key_usage: "{{ ler53_cert_extended_key_usages | default(omit) }}"
    owner: "{{ remote_web_user }}"
    group: "{{ remote_web_user }}"
    mode: 0600

- name: Generate the Let's Encrypt account key
  openssl_privatekey:
    path: "{{ account_key_dir }}/lets_encrypt_account.key"
    size: 2048
    owner: "{{ remote_web_user }}"
    group: "{{ remote_web_user }}"
    mode: 0600

- name: Initiate the Let's Encrypt challenge
  acme_certificate:
    acme_version: 2
    acme_directory: https://acme-v02.api.letsencrypt.org/directory
    challenge: dns-01
    account_key: "{{ account_key_dir }}/lets_encrypt_account.key"
    csr: "{{ cert_dir }}/{{ http_host }}.csr"
    dest: "{{ cert_dir }}/{{ http_host }}.crt"
    account_email: "{{ account_email }}"
    remaining_days: 10
    terms_agreed: yes
  register: lets_encrypt_challenge

- name: Create the DNS records for the challenge
  route53:
    command: create
    zone: "{{ zone_name }}"
    record: "{{ route53_item.value['dns-01']['record'] }}"
    type: TXT
    ttl: 5
    value: "\"{{ route53_item.value['dns-01']['resource_value'] }}\""
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    overwrite: yes
    wait: yes
  with_dict: "{{ lets_encrypt_challenge['challenge_data'] | default({}) }}"
  loop_control:
    loop_var: route53_item

- name: validate the Let's Encrypt challenge
  acme_certificate:
    acme_version: 2
    acme_directory: https://acme-v02.api.letsencrypt.org/directory
    challenge: dns-01
    account_key: "{{ account_key_dir }}/lets_encrypt_account.key"
    csr: "{{ cert_dir }}/{{ http_host }}.csr"
    dest: "{{ cert_dir }}/{{ http_host }}.crt"
    account_email: "{{ account_email }}"
    data: "{{ lets_encrypt_challenge }}"

- name: Delete the DNS records for the challenge
  route53:
    command: delete
    zone: "{{ zone_name }}"
    record: "{{ route53_item.value['dns-01']['record'] }}"
    type: TXT
    ttl: 5
    value: "\"{{ route53_item.value['dns-01']['resource_value'] }}\""
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
  with_dict: "{{ lets_encrypt_challenge['challenge_data'] | default({}) }}"
  loop_control:
    loop_var: route53_item

- name: Set the cert file permissions
  file:
    path: "{{ cert_dir }}/{{ http_host }}.crt"
    owner: "{{ remote_web_user }}"
    group: "{{ remote_web_user }}"
    mode: 0600
  notify: restart nginx
